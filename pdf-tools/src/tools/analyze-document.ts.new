import { z } from "zod";
import * as fs from 'fs';
import { PDFService } from "../services/pdfService";

// Tool to analyze PDF documents
export const analyzeDocumentTool = {
  name: "analyze_document",
  description: `This tool analyzes a PDF document and extracts insights.
  The result is a JSON object containing analysis results.
  Inputs: filePath, analysisType.
  Note: For extracting specific content, use the corresponding extraction tools.`,
  parameters: {
    filePath: z.string().describe("The path to the PDF file"),
    analysisType: z.enum(["structure", "content", "images", "classification"]).describe("Type of analysis to perform")
  },
  handler: async ({ filePath, analysisType }: {
    filePath: string;
    analysisType: "structure" | "content" | "images" | "classification";
  }) => {
    try {
      // Check if file exists
      if (!fs.existsSync(filePath)) {
        throw new Error(`PDF file not found: ${filePath}`);
      }
      
      // Use the PDFService to analyze the document
      const analysisResult = await PDFService.analyzeDocument(filePath, analysisType);
      
      return {
        content: [{ 
          type: "text" as const, 
          text: `Analysis Result (${analysisType}): ${JSON.stringify(analysisResult, null, 2)}` 
        }]
      };
    } catch (error) {
      console.error("Error analyzing document:", error);
      const errorMessage = error instanceof Error ? error.message : String(error);
      
      return {
        content: [{ 
          type: "text" as const, 
          text: `Error analyzing document: ${errorMessage}` 
        }]
      };
    }
  }
};
